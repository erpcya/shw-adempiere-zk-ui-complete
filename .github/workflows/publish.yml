# This workflow will build a Java project with Gradle
# This file was contributed by ysenih@erpya.com from ERP Consultores y Asociados, C.A
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Publish Project

on:
  release:
    types:
      - created

jobs:

  # Build dist application adempiere-middleware
  # Check secrets to push image in docker hub registry
  check-docker-secrets:
    name: Check if docker hub registry information was set on secrets
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_secret_job.outputs.is_have_secrets }}
    steps:
      - id: check_secret_job
        run: |
          if [[ "${{ secrets.DOCKER_REPO_ADEMPIERE_ZK }}" != "" && \
                "${{ secrets.DOCKER_USERNAME }}" != "" && \
                "${{ secrets.DOCKER_TOKEN }}" != "" ]]; \
          then
            echo "Secrets to use a container registry are configured in the repo"
            echo "is_have_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use a container registry were not configured in the repo"
            echo "is_have_secrets=false" >> $GITHUB_OUTPUT
          fi


  # TODO: Download .tar and add docker image without uncompress
  # Publish docker image in Docker Hub Registry to application
  push-imame-dhr:
    name: Push Docker image to Docker Hub
    needs:
      - check-docker-secrets
    # Skip step based on secret
    if: needs.check-docker-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Java JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-package: 'jdk'
          java-version: 11
          architecture: x64

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.0.1
      - run: |
          gradle createRelease

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          # CONFIGURE DOCKER SECRETS INTO REPOSITORY
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push alpine image in Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/jetty/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_REPO_ADEMPIERE_ZK }}:jetty-alpine-${{ github.event.release.tag_name }}
            ${{ secrets.DOCKER_REPO_ADEMPIERE_ZK }}:jetty-alpine
          build-args: |
            JDK_RELEASE=11-jdk-alpine